import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from imblearn.over_sampling import SMOTE

class DataPreprocessor:
    def __init__(self, config):
        self.config = config
    
    def load_data(self, filepath):
        """
        Load credit card fraud dataset
        
        Args:
            filepath (str): Path to the CSV file
        
        Returns:
            pd.DataFrame: Loaded dataset
        """
        try:
            data = pd.read_csv(filepath)
            print(f"Dataset loaded. Shape: {data.shape}")
            return data
        except Exception as e:
            print(f"Error loading data: {e}")
            return None
    
    def preprocess_data(self, data):
        """
        Preprocess the dataset
        
        Args:
            data (pd.DataFrame): Input dataset
        
        Returns:
            tuple: Processed X and y
        """
        # Separate features and target
        X = data.drop('Class', axis=1)
        y = data['Class']
        
        # Scale numerical features
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)
        
        # Apply SMOTE for handling class imbalance
        smote = SMOTE(random_state=42)
        X_resampled, y_resampled = smote.fit_resample(X_scaled, y)
        
        return X_resampled, y_resampled
    
    def split_data(self, X, y, test_size=0.2):
        """
        Split data into training and testing sets
        
        Args:
            X (np.array): Features
            y (np.array): Target
            test_size (float): Proportion of test set
        
        Returns:
            tuple: Train and test splits
        """
        X_train, X_test, y_train, y_test = train_test_split(
            X, y, 
            test_size=test_size, 
            random_state=42, 
            stratify=y
        )
        
        return X_train, X_test, y_train, y_test

def main():
    # Example usage
    preprocessor = DataPreprocessor(config={})
    data = preprocessor.load_data('data/creditcard.csv')
    
    if data is not None:
        X, y = preprocessor.preprocess_data(data)
        X_train, X_test, y_train, y_test = preprocessor.split_data(X, y)
        
        print(f"Training set shape: {X_train.shape}")
        print(f"Testing set shape: {X_test.shape}")

if __name__ == "__main__":
    main()
